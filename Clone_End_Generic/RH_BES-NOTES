
## See also:
# ../../Blast/Potato_BES_Vs_Pot_Illumina/


## QUERY (FASTA)
QUERY=Data/RH_BAC_ends_curated.20070603.fasta

## Assembly (DIR)
ASSDIR=Assembly/PGSC0003DM

## ASSEMBLY (SEQUENCE)
ASSEMBLY=$ASSDIR/PGSC0003DMB.fa

## ASSEMBLY (INDEX)
SSAHAIDX=$ASSDIR/Indexes/SSAHA2/`basename $ASSEMBLY .fa`.sanger

## OUT
RESULTS=Results/`basename $ASSEMBLY .fa`_vs_`basename $QUERY .fsa`.ssaha

## TOOLS
SSAHA_B=/sw/local/src/dbolser/SSAHA/ssaha2Build
SSAHA_R=/sw/local/src/dbolser/SSAHA/ssaha2



## TEST! NB: We create the index below, if it doesn't exist here:

ls \
  $QUERY \
  $ASSEMBLY \
  $SSAHAIDX.size \
  $RESULTS \
  $SSAHA_B \
  $SSAHA_R





## Step 1) Index the assembly for SSAHA2 searching

# $SSAHA_B \
#  -save $SSAHAIDX \
#        $ASSEMBLY





## Step 2) Run the QUERY sequences against the ASSEMBLY

# PWD=`pwd`

# qsub \
#   -q 64bit.q -b n -l ram=4000M \
#   -o $PWD/$RESULTS.out \
#   -e $PWD/$RESULTS.err \
#   \
# $PWD/runSSAHA.plx \
#   $SSAHA_R \
#   $PWD/$SSAHAIDX \
#   $PWD/$QUERY \
#   $PWD/$RESULTS

$SSAHA_R -tags 0 \
 -save $SSAHAIDX $QUERY \
 | perl -ne '
     print if /^\d/
   ' \
 > $RESULTS



## Replace the white-space field terminators with tabs. Not required
## if using 'runSSAHA'.

# sed -ri 's/\s+/\t/g' $RESULTS





## REMOVE ALIGNMENTS INVOLVING REPEATS.

DF=~/BiO/Util/depth_filter.plx



# ## TEST 'BOTH' ON CLUSTER
# 
# PWD=`pwd`
# 
# qsub \
#   -q 64bit.q -b n -l ram=12000M \
#   -o $PWD/$RESULTS.dfilt.out \
#   -e $PWD/$RESULTS.dfilt.err \
#   \
# $DF -d 3 -c .80 -t both \
#   $PWD/$RESULTS \
# > $PWD/$RESULTS.dfilt.b.d3.c80



## QUERY (RUNS)
$DF -d 5 -c .80 -t query $RESULTS > $RESULTS.dfilt.q.d5.c80
$DF -d 4 -c .80 -t query $RESULTS > $RESULTS.dfilt.q.d4.c80
$DF -d 3 -c .80 -t query $RESULTS > $RESULTS.dfilt.q.d3.c80

## This step removes a MASSIVE number of alignments!
wc -l $RESULTS                  # 6300111
wc -l $RESULTS.dfilt.q.d5.c80   #   
wc -l $RESULTS.dfilt.q.d4.c80   #   
wc -l $RESULTS.dfilt.q.d3.c80   #  114467



# ## HIT (FAILS... See BOTH 2)
# $DF -d 3 -c .80 -t hit   $RESULTS > $RESULTS.dfilt.h.d3.c80
# $DF -d 4 -c .80 -t hit   $RESULTS > $RESULTS.dfilt.h.d4.c80
# $DF -d 3 -c .80 -t hit   $RESULTS > $RESULTS.dfilt.h.d3.c80
# 
# ## This step removes a massive number of alignments!
# wc -l $RESULTS                  # 6300111
# wc -l $RESULTS.dfilt.h.d5.c80   #  
# wc -l $RESULTS.dfilt.h.d4.c80   #  
# wc -l $RESULTS.dfilt.h.d3.c80   #  



# ## BOTH 0 (FAILS)
# $DF -d 5 -c .80 -t both  $RESULTS > $RESULTS.dfilt.b.d5.c80
# $DF -d 4 -c .80 -t both  $RESULTS > $RESULTS.dfilt.b.d4.c80
# $DF -d 3 -c .80 -t both  $RESULTS > $RESULTS.dfilt.b.d3.c80

# ## This step removes a massive number of alignments!
# wc -l $RESULTS                  # 6300111
# wc -l $RESULTS.dfilt.b.d5.c80   # 
# wc -l $RESULTS.dfilt.b.d4.c80   # 
# wc -l $RESULTS.dfilt.b.d3.c80   # 



# ## BOTH 1 (FAILS)
# 
# ## This method is better than the method below because...
# 
# export RESULTS
# 
# perl -e '
#   open I, "<", $ENV{"RESULTS"}. ".dfilt.h.d3.c80" or die;
#   while(<I>){$x{$_}++}
#   
#   open O, "<", $ENV{"RESULTS"}. ".dfilt.q.d3.c80" or die;
#   while(<O>){print if $x{$_}}
#   
# ' > $RESULTS.dfilt.b.d3.c80
# 
# ## This step removes a massive number of alignments!
# wc -l $RESULTS                  # 6300111
# wc -l $RESULTS.dfilt.b.d5.c80   #   
# wc -l $RESULTS.dfilt.b.d3.c80   #   



## BOTH 2

## Above we use settings such that query sequecnes (BES) with multiple
## alignments to the target sequence are removed (or sub-alignments
## thereof). However, Some 'unique' pieces of the genome attract many
## query sequences. These artifacts are seen across BES, FES and 20kb
## 454 PE alignments, and should therefore be removed.

$DF -d 3 -c .80 -t hit \
  $RESULTS.dfilt.q.d3.c80 \
> $RESULTS.dfilt.b2.d3.c80

## This step removes a massive number of alignments!
wc -l $RESULTS.dfilt.q.d3.c80   #  114467
wc -l $RESULTS.dfilt.b2.d3.c80  #  100227





## Just make a GFF...

./to_gff.plx --source 'dund rh' \
  $RESULTS.dfilt.qh.d3.c80 \
> GFF/`basename $RESULTS`.dfilt.qh.d3.c80.gff

# bad ori, away   75
# missing seq     8590
# GOOD PAIR!      20597
# too short       46
# no align        39233
# bad ori, para   369
# too long        11
# OK

wc -l \
  GFF/`basename $RESULTS`.dfilt.qh.d3.c80.gff # 83806



## Load it into GB?

## See ../NOTES





